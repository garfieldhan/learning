import pyaudio
import wave
import threading
import sys
import os

# Audio settings
CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 2
RATE = 44100

# System audio device index
system_device_index = 0

# Microphone device index
mic_device_index = 1

# Output file name
output_file = "output.wav"

# Initialize PyAudio
p = pyaudio.PyAudio()

# Open streams for recording system audio and microphone audio
system_stream = p.open(format=FORMAT, channels=CHANNELS, rate=RATE, input=True,
                       input_device_index=system_device_index, frames_per_buffer=CHUNK)

mic_stream = p.open(format=FORMAT, channels=CHANNELS, rate=RATE, input=True,
                    input_device_index=mic_device_index, frames_per_buffer=CHUNK)

# Initialize the event that will be used to stop the recording
stop_event = threading.Event()

def keyboard_interrupt_handler(signal, frame):
    # This function will be called when a keyboard interrupt is detected
    print("Keyboard interrupt detected. Stopping recording...")
    stop_event.set()

# Register the keyboard interrupt handler
if os.name == "nt":
    import msvcrt
    import signal
    signal.signal(signal.SIGINT, keyboard_interrupt_handler)
else:
    import signal
    signal.signal(signal.SIGINT, keyboard_interrupt_handler)

print("Press 'ESC' to stop recording and exit")

# Start recording
frames = []
while not stop_event.is_set():
    system_data = system_stream.read(CHUNK)
    mic_data = mic_stream.read(CHUNK)
    frames.append(system_data)
    frames.append(mic_data)
    if msvcrt.kbhit() and ord(msvcrt.getch()) == 27:
        # Check if the 'ESC' key has been pressed
        print("ESC key detected. Stopping recording...")
        stop_event.set()

# Stop streams
system_stream.stop_stream()
system_stream.close()

mic_stream.stop_stream()
mic_stream.close()

# Save the recorded audio to a WAV file
wf = wave.open(output_file, "wb")
wf.setnchannels(CHANNELS)
wf.setsampwidth(p.get_sample_size(FORMAT))
wf.setframerate(RATE)
wf.writeframes(b"".join(frames))
wf.close()

# Terminate PyAudio
p.terminate()
