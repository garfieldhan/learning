import java.awt.Rectangle;
import java.io.File;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.StackPane;
import javafx.stage.Screen;
import javafx.stage.Stage;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.Mixer;
import javax.sound.sampled.TargetDataLine;
import org.xuggle.mediatool.IMediaWriter;
import org.xuggle.mediatool.ToolFactory;

public class ScreenRecorder extends Application {

  private Rectangle screenBounds;
  private IMediaWriter mediaWriter;
  private long startTime;

  public static void main(String[] args) {
    launch(args);
  }

  @Override
  public void start(Stage primaryStage) {
    // Get the screen size
    screenBounds = new Rectangle((int) Screen.getPrimary().getBounds().getWidth(),
                                  (int) Screen.getPrimary().getBounds().getHeight());

    // Create a media writer for the output file
    mediaWriter = ToolFactory.makeWriter("output.mp4");

    // Find and open a target data line for recording audio
    Mixer.Info[] mixerInfos = AudioSystem.getMixerInfo();
    for (Mixer.Info info : mixerInfos) {
      Mixer mixer = AudioSystem.getMixer(info);
      if (mixer.getTargetLineInfo().length == 0) {
        continue;
      }
      try {
        TargetDataLine targetDataLine = (TargetDataLine) mixer.getLine(mixer.getTargetLineInfo()[0]);
        targetDataLine.open();
        targetDataLine.start();
        DataLine.Info targetInfo = (DataLine.Info) targetDataLine.getLineInfo();
        mediaWriter.addAudioStream(0, 0, targetInfo.getChannels(), (int) targetInfo.getSampleRate());
      } catch (Exception e) {
        // Ignore any errors while opening or starting the data line
      }
    }

    // Set up a scene to capture the screen
    StackPane root = new StackPane();
    primaryStage.setScene(new Scene(root, screenBounds.getWidth(), screenBounds.getHeight()));
    primaryStage.show();

    // Start the recording
    startTime = System.nanoTime();
    new Thread(this::captureScreen).start();
  }

  private void captureScreen() {
    while (true) {
      // Take a screenshot
      mediaWriter.encodeVideo(0, ScreenCapture.getScreenCapture(screenBounds));

      // Check if recording time has elapsed
      if (System.nanoTime() - startTime > 60000000000L) { // 60 seconds
        break;
      }
    }

    // Close the media writer and exit the application
    mediaWriter.close();
    System.exit(0);
  }
}
